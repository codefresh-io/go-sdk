// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	codefresh "github.com/codefresh-io/go-sdk/pkg/codefresh"
	mock "github.com/stretchr/testify/mock"
)

// IRuntimeEnvironmentAPI is an autogenerated mock type for the IRuntimeEnvironmentAPI type
type IRuntimeEnvironmentAPI struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) Create(_a0 *codefresh.CreateRuntimeOptions) (*codefresh.RuntimeEnvironment, error) {
	ret := _m.Called(_a0)

	var r0 *codefresh.RuntimeEnvironment
	if rf, ok := ret.Get(0).(func(*codefresh.CreateRuntimeOptions) *codefresh.RuntimeEnvironment); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codefresh.RuntimeEnvironment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*codefresh.CreateRuntimeOptions) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Default provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) Default(_a0 string) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) Delete(_a0 string) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) Get(_a0 string) (*codefresh.RuntimeEnvironment, error) {
	ret := _m.Called(_a0)

	var r0 *codefresh.RuntimeEnvironment
	if rf, ok := ret.Get(0).(func(string) *codefresh.RuntimeEnvironment); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codefresh.RuntimeEnvironment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *IRuntimeEnvironmentAPI) List() ([]*codefresh.RuntimeEnvironment, error) {
	ret := _m.Called()

	var r0 []*codefresh.RuntimeEnvironment
	if rf, ok := ret.Get(0).(func() []*codefresh.RuntimeEnvironment); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*codefresh.RuntimeEnvironment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignCertificate provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) SignCertificate(_a0 *codefresh.SignCertificatesOptions) ([]byte, error) {
	ret := _m.Called(_a0)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(*codefresh.SignCertificatesOptions) []byte); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*codefresh.SignCertificatesOptions) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Validate provides a mock function with given fields: _a0
func (_m *IRuntimeEnvironmentAPI) Validate(_a0 *codefresh.ValidateRuntimeOptions) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*codefresh.ValidateRuntimeOptions) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
