// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	codefresh "github.com/codefresh-io/go-sdk/pkg/codefresh"
	mock "github.com/stretchr/testify/mock"
)

// Codefresh is an autogenerated mock type for the Codefresh type
type Codefresh struct {
	mock.Mock
}

// Argo provides a mock function with given fields:
func (_m *Codefresh) Argo() codefresh.ArgoAPI {
	ret := _m.Called()

	var r0 codefresh.ArgoAPI
	if rf, ok := ret.Get(0).(func() codefresh.ArgoAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.ArgoAPI)
		}
	}

	return r0
}

// Clusters provides a mock function with given fields:
func (_m *Codefresh) Clusters() codefresh.IClusterAPI {
	ret := _m.Called()

	var r0 codefresh.IClusterAPI
	if rf, ok := ret.Get(0).(func() codefresh.IClusterAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IClusterAPI)
		}
	}

	return r0
}

// Contexts provides a mock function with given fields:
func (_m *Codefresh) Contexts() codefresh.IContextAPI {
	ret := _m.Called()

	var r0 codefresh.IContextAPI
	if rf, ok := ret.Get(0).(func() codefresh.IContextAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IContextAPI)
		}
	}

	return r0
}

// Gitops provides a mock function with given fields:
func (_m *Codefresh) Gitops() codefresh.GitopsAPI {
	ret := _m.Called()

	var r0 codefresh.GitopsAPI
	if rf, ok := ret.Get(0).(func() codefresh.GitopsAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.GitopsAPI)
		}
	}

	return r0
}

// Pipelines provides a mock function with given fields:
func (_m *Codefresh) Pipelines() codefresh.IPipelineAPI {
	ret := _m.Called()

	var r0 codefresh.IPipelineAPI
	if rf, ok := ret.Get(0).(func() codefresh.IPipelineAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IPipelineAPI)
		}
	}

	return r0
}

// Progresses provides a mock function with given fields:
func (_m *Codefresh) Progresses() codefresh.IProgressAPI {
	ret := _m.Called()

	var r0 codefresh.IProgressAPI
	if rf, ok := ret.Get(0).(func() codefresh.IProgressAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IProgressAPI)
		}
	}

	return r0
}

// RuntimeEnvironments provides a mock function with given fields:
func (_m *Codefresh) RuntimeEnvironments() codefresh.IRuntimeEnvironmentAPI {
	ret := _m.Called()

	var r0 codefresh.IRuntimeEnvironmentAPI
	if rf, ok := ret.Get(0).(func() codefresh.IRuntimeEnvironmentAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IRuntimeEnvironmentAPI)
		}
	}

	return r0
}

// Tokens provides a mock function with given fields:
func (_m *Codefresh) Tokens() codefresh.ITokenAPI {
	ret := _m.Called()

	var r0 codefresh.ITokenAPI
	if rf, ok := ret.Get(0).(func() codefresh.ITokenAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.ITokenAPI)
		}
	}

	return r0
}

// Users provides a mock function with given fields:
func (_m *Codefresh) Users() codefresh.UsersAPI {
	ret := _m.Called()

	var r0 codefresh.UsersAPI
	if rf, ok := ret.Get(0).(func() codefresh.UsersAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.UsersAPI)
		}
	}

	return r0
}

// V2 provides a mock function with given fields:
func (_m *Codefresh) V2() codefresh.V2API {
	ret := _m.Called()

	var r0 codefresh.V2API
	if rf, ok := ret.Get(0).(func() codefresh.V2API); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.V2API)
		}
	}

	return r0
}

// Workflows provides a mock function with given fields:
func (_m *Codefresh) Workflows() codefresh.IWorkflowAPI {
	ret := _m.Called()

	var r0 codefresh.IWorkflowAPI
	if rf, ok := ret.Get(0).(func() codefresh.IWorkflowAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codefresh.IWorkflowAPI)
		}
	}

	return r0
}
